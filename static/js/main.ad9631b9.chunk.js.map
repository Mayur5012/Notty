{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Header.js","App.js","index.js"],"names":["Note","id","text","date","handleDeleteNote","className","onClick","size","AddNote","handleAddNote","useState","noteText","setNoteText","rows","cols","placeholder","value","onChange","event","target","length","trim","NotesList","notes","map","note","Header","handleToggleDarkMode","type","previousDarkMode","htmlFor","App","setNotes","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","Date","newNote","nanoid","toDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAkBeA,EAhBF,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAC/B,OACC,sBAAKC,UAAU,OAAf,UACC,+BAAOH,IACP,sBAAKG,UAAU,cAAf,UACC,gCAAQF,IACR,cAAC,IAAD,CACCG,QAAS,kBAAMF,EAAiBH,IAChCI,UAAU,cACVE,KAAK,iBC8BKC,EAtCC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACNC,mBAAS,IADH,mBAC/BC,EAD+B,KACrBC,EADqB,KAiBtC,OACC,sBAAKP,UAAU,WAAf,UACC,0BACCQ,KAAK,IACLC,KAAK,KACLC,YAAY,gBACZC,MAAOL,EACPM,SApBkB,SAACC,GAFC,IAGDA,EAAMC,OAAOH,MAAMI,QAAU,GACjDR,EAAYM,EAAMC,OAAOH,UAoBzB,sBAAKX,UAAU,cAAf,UACC,kCAzBoB,IA0BDM,EAASS,OAD5B,0BAGA,wBAAQf,UAAU,OAAOC,QApBJ,WACnBK,EAASU,OAAOD,OAAS,IAC5BX,EAAcE,GACdC,EAAY,MAiBX,yBCTWU,EApBG,SAAC,GAIZ,IAHNC,EAGK,EAHLA,MACAd,EAEK,EAFLA,cACAL,EACK,EADLA,iBAEA,OACC,sBAAKC,UAAU,aAAf,UACEkB,EAAMC,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,CACCxB,GAAIwB,EAAKxB,GACTC,KAAMuB,EAAKvB,KACXC,KAAMsB,EAAKtB,KACXC,iBAAkBA,OAGpB,cAAC,EAAD,CAASK,cAAeA,QCkBZiB,EAnCA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,qBAChB,OACE,sBAAKtB,UAAU,SAAf,UACE,uCACA,qBAAKA,UAAU,gDAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,2BAA2BJ,GAAG,yBAA7C,SACE,sBAAKI,UAAU,oCAAf,UAEE,wBAAOA,UAAU,SAAjB,UACE,uBACEuB,KAAK,WACLtB,QAAS,kBACPqB,GACE,SAACE,GAAD,OAAuBA,QAI7B,sBAAMxB,UAAU,oBAGlB,uBACEA,UAAU,mBACVyB,QAAQ,yBAFV,0C,OCmCCC,EArDH,WAAO,IAAD,EACSrB,mBAAS,IADlB,mBACVa,EADU,KACHS,EADG,OAEetB,oBAAS,GAFxB,mBAEVuB,EAFU,KAEAC,EAFA,KAIjBC,qBAAU,WACT,IAAMC,EAAaC,KAAKC,MACvBC,aAAaC,QAAQ,UAGlBJ,GACHJ,EAASI,KAER,IAEHD,qBAAU,WACTI,aAAaE,QACZ,QACAJ,KAAKK,UAAUnB,MAEd,CAACA,IAkBJ,OACC,qBAAKlB,UAAS,UAAK4B,GAAY,aAA/B,SACC,sBAAK5B,UAAU,YAAf,UACC,cAAC,EAAD,CAAQsB,qBAAsBO,IAC9B,cAAC,EAAD,CACCX,MAAOA,EAAMoB,QAAO,SAAClB,GAAD,OACnBA,EAAKvB,KAAK0C,iBAEXnC,cAxBY,SAACP,GAChB,IAAIC,EAAO,IAAI0C,KACTC,EAAU,CACf7C,GAAI8C,cACJ7C,KAAMA,EACNC,KAAMA,EAAK6C,gBAENC,EAAQ,sBAAO1B,GAAP,CAAcuB,IAC5Bd,EAASiB,IAiBN7C,iBAde,SAACH,GACnB,IAAMgD,EAAW1B,EAAMoB,QAAO,SAAClB,GAAD,OAAUA,EAAKxB,KAAOA,KACpD+B,EAASiB,YClCXC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.ad9631b9.chunk.js","sourcesContent":["import { MdDeleteForever } from 'react-icons/md';\n\nconst Note = ({ id, text, date, handleDeleteNote }) => {\n\treturn (\n\t\t<div className='note'>\n\t\t\t<span>{text}</span>\n\t\t\t<div className='note-footer'>\n\t\t\t\t<small>{date}</small>\n\t\t\t\t<MdDeleteForever\n\t\t\t\t\tonClick={() => handleDeleteNote(id)}\n\t\t\t\t\tclassName='delete-icon'\n\t\t\t\t\tsize='1.5em'\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Note;\n","//adding a note\nimport { useState } from 'react';\n\nconst AddNote = ({ handleAddNote }) => {\n\tconst [noteText, setNoteText] = useState('');\n\tconst characterLimit = 250;\n//set text\n\tconst handleChange = (event) => {\n\t\tif (characterLimit - event.target.value.length >= 0) {\n\t\t\tsetNoteText(event.target.value);\n\t\t}\n\t};\n//handles save button\n\tconst handleSaveClick = () => {\n\t\tif (noteText.trim().length > 0) {\n\t\t\thandleAddNote(noteText);\n\t\t\tsetNoteText('');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='note new'>\n\t\t\t<textarea\n\t\t\t\trows='8'\n\t\t\t\tcols='10'\n\t\t\t\tplaceholder='Add a note...'\n\t\t\t\tvalue={noteText}\n\t\t\t\tonChange={handleChange}\n\t\t\t></textarea>\n\t\t\t<div className='note-footer'>\n\t\t\t\t<small>\n\t\t\t\t\t{characterLimit - noteText.length} Character Remaining\n\t\t\t\t</small>\n\t\t\t\t<button className='save' onClick={handleSaveClick}>\n\t\t\t\t\tSave\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AddNote;\n","//list all save notes\nimport Note from './Note';\nimport AddNote from './AddNote';\n\nconst NotesList = ({\n\tnotes,\n\thandleAddNote,\n\thandleDeleteNote,\n}) => {\n\treturn (\n\t\t<div className='notes-list'>\n\t\t\t{notes.map((note) => (\n\t\t\t\t<Note\n\t\t\t\t\tid={note.id}\n\t\t\t\t\ttext={note.text}\n\t\t\t\t\tdate={note.date}\n\t\t\t\t\thandleDeleteNote={handleDeleteNote}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t<AddNote handleAddNote={handleAddNote} />\n\t\t</div>\n\t);\n};\n\nexport default NotesList;\n","import React from \"react\";\n\nconst Header = ({ handleToggleDarkMode }) => {\n  return (\n    <div className=\"header\">\n      <h1>Notty</h1>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container-fluid\">\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <div className=\"form-check form-switch text-light\">\n\n              <label className=\"switch\">\n                <input\n                  type=\"checkbox\"\n                  onClick={() =>\n                    handleToggleDarkMode(\n                      (previousDarkMode) => !previousDarkMode\n                    )\n                  }\n                />\n                <span className=\"slider round\"></span>\n              </label>\n\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"flexSwitchCheckDefault\"\n              >\n                Enable DarkMode\n              </label>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useState, useEffect } from 'react';\nimport NotesList from './components/NotesList';\nimport Header from './components/Header';\nimport { nanoid } from 'nanoid';\n\nconst App = () => {\n\tconst [notes, setNotes] = useState([]);\n\tconst [darkMode, setDarkMode] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst savedNotes = JSON.parse(\n\t\t\tlocalStorage.getItem('notty')\n\t\t);\n\n\t\tif (savedNotes) {\n\t\t\tsetNotes(savedNotes);\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\n\t\t\t'notty',\n\t\t\tJSON.stringify(notes)\n\t\t);\n\t}, [notes]);\n\n\tconst addNote = (text) => {\n\t\tlet date = new Date();\n\t\tconst newNote = {\n\t\t\tid: nanoid(),\n\t\t\ttext: text,\n\t\t\tdate: date.toDateString()\n\t\t};\n\t\tconst newNotes = [...notes, newNote];\n\t\tsetNotes(newNotes);\n\t};\n\n\tconst deleteNote = (id) => {\n\t\tconst newNotes = notes.filter((note) => note.id !== id);\n\t\tsetNotes(newNotes);\n\t};\n\n\treturn (\n\t\t<div className={`${darkMode && 'dark-mode'}`}>\n\t\t\t<div className='container'>\n\t\t\t\t<Header handleToggleDarkMode={setDarkMode} />\n\t\t\t\t<NotesList\n\t\t\t\t\tnotes={notes.filter((note) =>\n\t\t\t\t\t\tnote.text.toLowerCase()\n\t\t\t\t\t)}\n\t\t\t\t\thandleAddNote={addNote}\n\t\t\t\t\thandleDeleteNote={deleteNote}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}